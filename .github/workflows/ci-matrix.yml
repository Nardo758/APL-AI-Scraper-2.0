name: Test Matrix

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# This workflow runs unit and integration tests across a small matrix. It
# uses pinned major versions for commonly used actions to reduce editor
# schema warnings while keeping runtime behavior unchanged.

jobs:
  test-stubbed:
    name: Stubbed Tests (${{ matrix.os }} - Node ${{ matrix.node-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Run linting
        run: npx eslint . --ext .js --max-warnings 0

      - name: Run unit tests (stubbed)
        run: npm test

      - name: Run integration tests (stubbed)
        run: npm run test:integration

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            coverage/
          retention-days: 30

  test-integration:
    name: Integration Tests (Real Services)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev python3
          npm ci --no-audit --no-fund

      - name: Wait for Redis
        run: |
          until redis-cli -h localhost -p 6379 ping | grep -q PONG; do
            echo "Waiting for Redis..."
            sleep 2
          done

      - name: Run tests with real services
        env:
          SUPABASE_URL: "${{ secrets.SUPABASE_URL }}"
          SUPABASE_ANON_KEY: "${{ secrets.SUPABASE_ANON_KEY }}"
          REDIS_URL: redis://localhost:6379
        run: |
          npm run test:all

      - name: Upload integration test results
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: coverage/
          retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@v1
        env:
          SNYK_TOKEN: "${{ secrets.SNYK_TOKEN }}"
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
  # expression is quoted to reduce editor warnings and preserve runtime

# End of workflow - secrets are intentionally referenced via ${{ secrets.* }}
# These expressions are evaluated at runtime by GitHub Actions and may
# trigger editor/schema warnings locally; this is expected and safe.
